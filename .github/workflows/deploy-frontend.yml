name: Deploy Frontend to Vercel

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  # ==========================================
  # Job 1: Î¶∞Ìä∏ & ÌÉÄÏûÖ Ï≤¥ÌÅ¨
  # ==========================================
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v3

      - name: üì¶ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: üìö Install dependencies
        run: npm ci

      - name: üîç Run ESLint
        run: npm run lint --if-present

      - name: ‚úîÔ∏è TypeScript type check
        run: npm run type-check --if-present || npx tsc --noEmit

      - name: üß™ Run tests
        run: npm run test --if-present || echo "No test script found"

  # ==========================================
  # Job 2: Vercel Î∞∞Ìè¨ (Preview)
  # ==========================================
  deploy-preview:
    needs: lint-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v3

      - name: üöÄ Deploy to Vercel (Preview)
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          scope: ${{ secrets.VERCEL_ORG_ID }}

      - name: üìù Comment PR with deployment URL
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚úÖ Preview deployment completed!\n\nüåê Visit your preview: https://${{ env.VERCEL_URL }}'
            })

  # ==========================================
  # Job 3: Vercel Î∞∞Ìè¨ (Production)
  # ==========================================
  deploy-production:
    needs: lint-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v3

      - name: üöÄ Deploy to Vercel (Production)
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: "--prod"
          scope: ${{ secrets.VERCEL_ORG_ID }}

      - name: ‚úÖ Production deployment successful
        run: |
          echo "========================================"
          echo "üéâ PRODUCTION DEPLOYMENT SUCCESSFUL!"
          echo "========================================"
          echo "üåê Production URL: https://${{ env.VERCEL_URL }}"
          echo "========================================"

  # ==========================================
  # Job 4: Ìó¨Ïä§ Ï≤¥ÌÅ¨ & ÏïåÎ¶º
  # ==========================================
  # health-check:
  #   needs: deploy-production
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'

  #   steps:
  #     - name: üè• Health check
  #       run: |
  #         echo "========================================"
  #         echo "üè• Performing health check"
  #         echo "========================================"

  #         MAX_ATTEMPTS=10
  #         ATTEMPT=0

  #         while [ $ATTEMPT -lt $MAX_ATTEMPTS ]; do
  #           ATTEMPT=$((ATTEMPT+1))
  #           echo "‚è≥ Health check attempt $ATTEMPT/$MAX_ATTEMPTS..."

  #           if curl -f https://${{ env.VERCEL_URL }} 2>/dev/null; then
  #             echo ""
  #             echo "========================================"
  #             echo "‚úÖ APPLICATION HEALTHY!"
  #             echo "========================================"
  #             echo "üåê URL: https://${{ env.VERCEL_URL }}"
  #             echo "========================================"
  #             exit 0
  #           fi

  #           echo "‚è≥ Waiting 5s before next attempt..."
  #           sleep 5
  #         done

  #         echo ""
  #         echo "========================================"
  #         echo "‚ö†Ô∏è Health check inconclusive (timeout)"
  #         echo "========================================"
  #         exit 0

  #     - name: üìß Notify Slack (Optional)
  #       uses: slackapi/slack-github-action@v1.24.0
  #       if: always()
  #       with:
  #         payload: |
  #           {
  #             "text": "Frontend Deployment Status",
  #             "blocks": [
  #               {
  #                 "type": "section",
  #                 "text": {
  #                   "type": "mrkdwn",
  #                   "text": "*Vercel Deployment*\n‚úÖ Production deployment completed!\nüåê URL: https://${{ env.VERCEL_URL }}"
  #                 }
  #               }
  #             ]
  #           }
  #       env:
  #         SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  #         SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
